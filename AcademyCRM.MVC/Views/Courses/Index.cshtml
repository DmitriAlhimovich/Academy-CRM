@model IEnumerable<CourseModel>
@{
    ViewData["Title"] = "Courses";

}
<div id="container">
    <h1>Courses</h1>

    @await Html.PartialAsync("Partial/_Search")

    <div class="row mt-2">
        <table class="table table-bordered">

            <tr>
                <th>Title</th>
                <th>Description</th>
                <td>Level</td>
                <td>Duration (weeks)</td>
                <td>Price (BYN)</td>
            </tr>
            
            @if (Model.Any())
            {
                @foreach (var course in Model.OrderBy(c => c.Title))
                {
                    <tr>
                        <td><a asp-controller="Courses" asp-action="Edit" asp-route-id="@course.Id">@course.Title (@course.RequestsCount)</a></td>
                        <td>@course.Description</td>
                        <td>@course.Level</td>
                        <td>@course.DurationWeeks</td>
                        <td>@course.Price</td>
                    </tr>
                }
                <tr>
                    <th>
                        <div class="text-info">Total: @Model.Count()</div>
                    </th>
                </tr>
            }
            else
            {
                <tr>
                    <td colspan="10">No course was found</td>
                </tr>
            }

            
        </table>
    </div>
    @if (User is not null)
    {
<div class="row ">
    <div class="col-2">
        <a class="btn btn-info" asp-controller="Courses" asp-action="Edit">Add New</a>
    </div>
    <div  class="col-2">
        <a class="btn btn-success" asp-controller="Courses" asp-action="Download">Download as CSV</a>
    </div>
</div>
    }
</div>